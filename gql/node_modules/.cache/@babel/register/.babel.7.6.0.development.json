{
  "{\"sourceRoot\":\"/home/pedro/hack/Ratechange/gql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/pedro/hack/Ratechange/gql\",\"filename\":\"/home/pedro/hack/Ratechange/gql/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pedro/hack/Ratechange/gql\",\"plugins\":[{\"key\":\"/home/pedro/hack/Ratechange/gql/node_modules/babel-plugin-lodash/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pedro/hack/Ratechange/gql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/pedro/hack/Ratechange/gql",
      "filename": "/home/pedro/hack/Ratechange/gql/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pedro/hack/Ratechange/gql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/pedro/hack/Ratechange/gql/node_modules/babel-plugin-lodash/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pedro/hack/Ratechange/gql/src/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pedro/hack/Ratechange/gql/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pedro/hack/Ratechange/gql/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require('apollo-server'),\n    ApolloServer = _require.ApolloServer;\n\nvar fetch = require('./fetch.js');\n\nvar _require2 = require('lodash'),\n    get = _require2.get; // The schema for object type definitions \n\n\nvar typeDefs = \"\\n  type Currencies {\\n    currencies: [String]\\n  }\\n\\n  type Rate {\\n    currency: String\\n    rate: Float\\n  }\\n\\n  type Rates {\\n    rates: [Rate]\\n    base: String\\n    date: String\\n  }\\n\\n  type Query {\\n    rates_latest(amount: Float, base: String, symbols: String): Rates\\n    list_currencies: Currencies\\n  }\\n\"; // Resolvers are only called when data is requested\n\nvar resolvers = {\n  Query: {\n    rates_latest: function () {\n      var _rates_latest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_, params) {\n        var EXCHANGE_RATE_API, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                EXCHANGE_RATE_API = process.env.EXCHANGE_RATE_API;\n                console.log(EXCHANGE_RATE_API);\n                _context.next = 4;\n                return fetch.build(\"\".concat(process.env.EXCHANGE_RATE_API, \"/latest\"), _objectSpread({}, params)).then(function (res) {\n                  return res.json();\n                });\n\n              case 4:\n                data = _context.sent;\n                console.log(data);\n                return _context.abrupt(\"return\", {\n                  data: data,\n                  params: params\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function rates_latest(_x, _x2) {\n        return _rates_latest.apply(this, arguments);\n      }\n\n      return rates_latest;\n    }(),\n    list_currencies: function () {\n      var _list_currencies = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_, params) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", fetch.build(\"\".concat(process.env.EXCHANGE_RATE_API, \"/latest\"), params).then(function (res) {\n                  return res.json();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function list_currencies(_x3, _x4) {\n        return _list_currencies.apply(this, arguments);\n      }\n\n      return list_currencies;\n    }()\n  },\n  Currencies: {\n    currencies: function currencies(data) {\n      return Object.keys(get(data, 'rates', {}));\n    }\n  },\n  Rates: {\n    base: function base(_ref) {\n      var data = _ref.data;\n      return get(data, 'base', null);\n    },\n    date: function date(_ref2) {\n      var data = _ref2.data;\n      return get(data, 'date', null);\n    },\n    rates: function rates(_ref3) {\n      var data = _ref3.data,\n          params = _ref3.params;\n      var rates = get(data, 'rates', {});\n      var amount = get(params, 'amount', false); // Tranform rates into an array\n\n      return Object.keys(rates).map(function (currency) {\n        return {\n          currency: currency,\n          rate: amount ? parseFloat(rates[currency]) * parseFloat(amount) : rates[currency]\n        };\n      });\n    }\n  }\n}; // Constructs the server\n\nvar server = new ApolloServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n}); // Starts the basic apollo server\n\nserver.listen(3333).then(function (_ref4) {\n  var url = _ref4.url;\n  console.log(\"\\uD83D\\uDE80  Server ready at \".concat(url));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiQXBvbGxvU2VydmVyIiwiZmV0Y2giLCJnZXQiLCJ0eXBlRGVmcyIsInJlc29sdmVycyIsIlF1ZXJ5IiwicmF0ZXNfbGF0ZXN0IiwiXyIsInBhcmFtcyIsIkVYQ0hBTkdFX1JBVEVfQVBJIiwicHJvY2VzcyIsImVudiIsImNvbnNvbGUiLCJsb2ciLCJidWlsZCIsInRoZW4iLCJyZXMiLCJqc29uIiwiZGF0YSIsImxpc3RfY3VycmVuY2llcyIsIkN1cnJlbmNpZXMiLCJjdXJyZW5jaWVzIiwiT2JqZWN0Iiwia2V5cyIsIlJhdGVzIiwiYmFzZSIsImRhdGUiLCJyYXRlcyIsImFtb3VudCIsIm1hcCIsImN1cnJlbmN5IiwicmF0ZSIsInBhcnNlRmxvYXQiLCJzZXJ2ZXIiLCJsaXN0ZW4iLCJ1cmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztlQUF5QkEsT0FBTyxDQUFDLGVBQUQsQztJQUF4QkMsWSxZQUFBQSxZOztBQUNSLElBQU1DLEtBQUssR0FBR0YsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O2dCQUNnQkEsT0FBTyxDQUFDLFFBQUQsQztJQUFmRyxHLGFBQUFBLEcsRUFFUjs7O0FBQ0EsSUFBTUMsUUFBUSxxVUFBZCxDLENBc0JBOztBQUNBLElBQU1DLFNBQVMsR0FBRztBQUNoQkMsRUFBQUEsS0FBSyxFQUFFO0FBQ0xDLElBQUFBLFlBQVk7QUFBQTtBQUFBO0FBQUEsOEJBQUUsaUJBQU1DLENBQU4sRUFBU0MsTUFBVDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFVkMsZ0JBQUFBLGlCQUZVLEdBR1JDLE9BQU8sQ0FBQ0MsR0FIQSxDQUVWRixpQkFGVTtBQUlaRyxnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLGlCQUFaO0FBSlk7QUFBQSx1QkFNT1IsS0FBSyxDQUFDYSxLQUFOLFdBQWdCSixPQUFPLENBQUNDLEdBQVIsQ0FBWUYsaUJBQTVCLGdDQUNkRCxNQURjLEdBRWhCTyxJQUZnQixD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Um9vdCI6Ii9ob21lL3BlZHJvL2hhY2svUmF0ZWNoYW5nZS9ncWwvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBBcG9sbG9TZXJ2ZXIgfSA9IHJlcXVpcmUoJ2Fwb2xsby1zZXJ2ZXInKTtcbmNvbnN0IGZldGNoID0gcmVxdWlyZSgnLi9mZXRjaC5qcycpO1xuY29uc3QgeyBnZXQgfSA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG4vLyBUaGUgc2NoZW1hIGZvciBvYmplY3QgdHlwZSBkZWZpbml0aW9ucyBcbmNvbnN0IHR5cGVEZWZzID0gYFxuICB0eXBlIEN1cnJlbmNpZXMge1xuICAgIGN1cnJlbmNpZXM6IFtTdHJpbmddXG4gIH1cblxuICB0eXBlIFJhdGUge1xuICAgIGN1cnJlbmN5OiBTdHJpbmdcbiAgICByYXRlOiBGbG9hdFxuICB9XG5cbiAgdHlwZSBSYXRlcyB7XG4gICAgcmF0ZXM6IFtSYXRlXVxuICAgIGJhc2U6IFN0cmluZ1xuICAgIGRhdGU6IFN0cmluZ1xuICB9XG5cbiAgdHlwZSBRdWVyeSB7XG4gICAgcmF0ZXNfbGF0ZXN0KGFtb3VudDogRmxvYXQsIGJhc2U6IFN0cmluZywgc3ltYm9sczogU3RyaW5nKTogUmF0ZXNcbiAgICBsaXN0X2N1cnJlbmNpZXM6IEN1cnJlbmNpZXNcbiAgfVxuYDtcblxuLy8gUmVzb2x2ZXJzIGFyZSBvbmx5IGNhbGxlZCB3aGVuIGRhdGEgaXMgcmVxdWVzdGVkXG5jb25zdCByZXNvbHZlcnMgPSB7XG4gIFF1ZXJ5OiB7XG4gICAgcmF0ZXNfbGF0ZXN0OiBhc3luYyhfLCBwYXJhbXMpID0+IHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgRVhDSEFOR0VfUkFURV9BUElcbiAgICAgIH0gPSBwcm9jZXNzLmVudjtcbiAgICAgIGNvbnNvbGUubG9nKEVYQ0hBTkdFX1JBVEVfQVBJKTtcblxuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGZldGNoLmJ1aWxkKGAkeyBwcm9jZXNzLmVudi5FWENIQU5HRV9SQVRFX0FQSSB9L2xhdGVzdGAsIHtcbiAgICAgICAgLi4ucGFyYW1zXG4gICAgICB9KS50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuXG4gICAgICBjb25zb2xlLmxvZyhkYXRhKTtcblxuICAgICAgcmV0dXJuIHsgZGF0YSwgcGFyYW1zIH07XG4gICAgfSxcbiAgICBsaXN0X2N1cnJlbmNpZXM6IGFzeW5jKF8sIHBhcmFtcykgPT4gZmV0Y2guYnVpbGQoYCR7IHByb2Nlc3MuZW52LkVYQ0hBTkdFX1JBVEVfQVBJIH0vbGF0ZXN0YCwgcGFyYW1zKS50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICB9LFxuICBDdXJyZW5jaWVzOiB7XG4gICAgY3VycmVuY2llczogKGRhdGEpID0+IE9iamVjdC5rZXlzKGdldChkYXRhLCAncmF0ZXMnLCB7fSkpXG4gIH0sXG4gIFJhdGVzOiB7XG4gICAgYmFzZTogKHsgZGF0YSB9KSA9PiBnZXQoZGF0YSwgJ2Jhc2UnLCBudWxsKSxcbiAgICBkYXRlOiAoeyBkYXRhIH0pID0+IGdldChkYXRhLCAnZGF0ZScsIG51bGwpLFxuICAgIHJhdGVzOiAoeyBkYXRhLCBwYXJhbXMgfSkgPT4ge1xuICAgICAgY29uc3QgcmF0ZXMgPSBnZXQoZGF0YSwgJ3JhdGVzJywge30pO1xuICAgICAgY29uc3QgYW1vdW50ID0gZ2V0KHBhcmFtcywgJ2Ftb3VudCcsIGZhbHNlKTtcblxuICAgICAgLy8gVHJhbmZvcm0gcmF0ZXMgaW50byBhbiBhcnJheVxuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHJhdGVzKS5tYXAoY3VycmVuY3kgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGN1cnJlbmN5LFxuICAgICAgICAgIHJhdGU6IGFtb3VudCA/IHBhcnNlRmxvYXQocmF0ZXNbY3VycmVuY3ldKSAqIHBhcnNlRmxvYXQoYW1vdW50KSA6IHJhdGVzW2N1cnJlbmN5XVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn07XG5cbi8vIENvbnN0cnVjdHMgdGhlIHNlcnZlclxuY29uc3Qgc2VydmVyID0gbmV3IEFwb2xsb1NlcnZlcih7XG4gIHR5cGVEZWZzLFxuICByZXNvbHZlcnNcbn0pO1xuXG4vLyBTdGFydHMgdGhlIGJhc2ljIGFwb2xsbyBzZXJ2ZXJcbnNlcnZlci5saXN0ZW4oMzMzMykudGhlbigoeyB1cmwgfSkgPT4ge1xuICBjb25zb2xlLmxvZyhg8J+agCAgU2VydmVyIHJlYWR5IGF0ICR7dXJsfWApO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "ApolloServer",
        "fetch",
        "get",
        "typeDefs",
        "resolvers",
        "Query",
        "rates_latest",
        "_",
        "params",
        "EXCHANGE_RATE_API",
        "process",
        "env",
        "console",
        "log",
        "build",
        "then",
        "res",
        "json",
        "data",
        "list_currencies",
        "Currencies",
        "currencies",
        "Object",
        "keys",
        "Rates",
        "base",
        "date",
        "rates",
        "amount",
        "map",
        "currency",
        "rate",
        "parseFloat",
        "server",
        "listen",
        "url"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pedro/hack/Ratechange/gql/src",
      "sourcesContent": [
        "const { ApolloServer } = require('apollo-server');\nconst fetch = require('./fetch.js');\nconst { get } = require('lodash');\n\n// The schema for object type definitions \nconst typeDefs = `\n  type Currencies {\n    currencies: [String]\n  }\n\n  type Rate {\n    currency: String\n    rate: Float\n  }\n\n  type Rates {\n    rates: [Rate]\n    base: String\n    date: String\n  }\n\n  type Query {\n    rates_latest(amount: Float, base: String, symbols: String): Rates\n    list_currencies: Currencies\n  }\n`;\n\n// Resolvers are only called when data is requested\nconst resolvers = {\n  Query: {\n    rates_latest: async(_, params) => {\n      const {\n        EXCHANGE_RATE_API\n      } = process.env;\n      console.log(EXCHANGE_RATE_API);\n\n      const data = await fetch.build(`${ process.env.EXCHANGE_RATE_API }/latest`, {\n        ...params\n      }).then(res => res.json())\n\n      console.log(data);\n\n      return { data, params };\n    },\n    list_currencies: async(_, params) => fetch.build(`${ process.env.EXCHANGE_RATE_API }/latest`, params).then(res => res.json())\n  },\n  Currencies: {\n    currencies: (data) => Object.keys(get(data, 'rates', {}))\n  },\n  Rates: {\n    base: ({ data }) => get(data, 'base', null),\n    date: ({ data }) => get(data, 'date', null),\n    rates: ({ data, params }) => {\n      const rates = get(data, 'rates', {});\n      const amount = get(params, 'amount', false);\n\n      // Tranform rates into an array\n      return Object.keys(rates).map(currency => {\n        return {\n          currency,\n          rate: amount ? parseFloat(rates[currency]) * parseFloat(amount) : rates[currency]\n        }\n      });\n    }\n  }\n};\n\n// Constructs the server\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers\n});\n\n// Starts the basic apollo server\nserver.listen(3333).then(({ url }) => {\n  console.log(`🚀  Server ready at ${url}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568459772477
  },
  "{\"sourceRoot\":\"/home/pedro/hack/Ratechange/gql/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/pedro/hack/Ratechange/gql\",\"filename\":\"/home/pedro/hack/Ratechange/gql/src/fetch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pedro/hack/Ratechange/gql\",\"plugins\":[{\"key\":\"/home/pedro/hack/Ratechange/gql/node_modules/babel-plugin-lodash/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pedro/hack/Ratechange/gql/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/pedro/hack/Ratechange/gql",
      "filename": "/home/pedro/hack/Ratechange/gql/src/fetch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pedro/hack/Ratechange/gql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/home/pedro/hack/Ratechange/gql/node_modules/babel-plugin-lodash/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pedro/hack/Ratechange/gql/src/fetch.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pedro/hack/Ratechange/gql/src/fetch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pedro/hack/Ratechange/gql/src",
        "sourceFileName": "fetch.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar fetch = require('node-fetch');\n\nvar _require = require('lodash'),\n    isArray = _require.isArray;\n/**\n * Transforms an array into an encoded URI string \n * \n * @param {object} params \n * @param {string} key\n * @param {string} slug\n */\n\n\nvar arrayToUrlString = function arrayToUrlString(params, key, slug) {\n  return params[key].reduce(function (acc, item, index) {\n    var amp = index === 0 ? '' : '&';\n    return \"\".concat(acc).concat(amp).concat(key, \"[]=\").concat(encodeURIComponent(item));\n  }, slug);\n};\n/**\n * Transforms an object of parameters into a URL encoded query string\n * \n * @param {object} params   An object of URL parameters to be encode\n * @param {string} slug     The inital slug for the URL\n */\n\n\nvar paramsObjectToUrlString = function paramsObjectToUrlString(params) {\n  var slug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Object.keys(params).reduce(function (acc, key, index) {\n    // Ensures the parameter \n    if (params[key] !== null) {\n      var amp = index === 0 ? '' : '&';\n\n      if (isArray(params[key])) {\n        return arrayToUrlString(params, key, \"\".concat(acc).concat(amp));\n      }\n\n      return \"\".concat(acc).concat(amp).concat(key, \"=\").concat(encodeURIComponent(params[key]));\n    }\n\n    return acc;\n  }, slug);\n};\n/**\n * A wrapper around fetch to handle query parameter transformation\n * \n * @param {string} url      The base url\n * @param {object} params   An object with the parameters\n */\n\n\nmodule.exports.build = function (url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var queryString = paramsObjectToUrlString(params);\n  return fetch(\"\".concat(url).concat(queryString ? \"?\".concat(queryString) : ''));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZldGNoLmpzIl0sIm5hbWVzIjpbImZldGNoIiwicmVxdWlyZSIsImlzQXJyYXkiLCJhcnJheVRvVXJsU3RyaW5nIiwicGFyYW1zIiwia2V5Iiwic2x1ZyIsInJlZHVjZSIsImFjYyIsIml0ZW0iLCJpbmRleCIsImFtcCIsImVuY29kZVVSSUNvbXBvbmVudCIsInBhcmFtc09iamVjdFRvVXJsU3RyaW5nIiwiT2JqZWN0Iiwia2V5cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJidWlsZCIsInVybCIsInF1ZXJ5U3RyaW5nIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBckI7O2VBQ29CQSxPQUFPLENBQUMsUUFBRCxDO0lBQW5CQyxPLFlBQUFBLE87QUFFUjs7Ozs7Ozs7O0FBT0EsSUFBTUMsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFDQyxNQUFELEVBQVNDLEdBQVQsRUFBY0MsSUFBZDtBQUFBLFNBQXVCRixNQUFNLENBQUNDLEdBQUQsQ0FBTixDQUFZRSxNQUFaLENBQW9CLFVBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxLQUFaLEVBQXNCO0FBQ3hGLFFBQU1DLEdBQUcsR0FBR0QsS0FBSyxLQUFLLENBQVYsR0FBYyxFQUFkLEdBQW1CLEdBQS9CO0FBQ0EscUJBQVdGLEdBQVgsU0FBbUJHLEdBQW5CLFNBQTJCTixHQUEzQixnQkFBc0NPLGtCQUFrQixDQUFDSCxJQUFELENBQXhEO0FBQ0QsR0FIK0MsRUFHN0NILElBSDZDLENBQXZCO0FBQUEsQ0FBekI7QUFLQTs7Ozs7Ozs7QUFNQSxJQUFNTyx1QkFBdUIsR0FBRyxTQUExQkEsdUJBQTBCLENBQUNULE1BQUQ7QUFBQSxNQUFTRSxJQUFULHVFQUFnQixFQUFoQjtBQUFBLFNBQXVCUSxNQUFNLENBQUNDLElBQVAsQ0FBWVgsTUFBWixFQUFvQkcsTUFBcEIsQ0FBNEIsVUFBQ0MsR0FBRCxFQUFNSCxHQUFOLEVBQVdLLEtBQVgsRUFBcUI7QUFDdEc7QUFDQSxRQUFJTixNQUFNLENBQUNDLEdBQUQsQ0FBTixLQUFnQixJQUFwQixFQUEwQjtBQUN4QixVQUFNTSxHQUFHLEdBQUdELEtBQUssS0FBSyxDQUFWLEdBQWMsRUFBZCxHQUFtQixHQUEvQjs7QUFFQSxVQUFJUixPQUFPLENBQUNFLE1BQU0sQ0FBQ0MsR0FBRCxDQUFQLENBQVgsRUFBMEI7QUFDeEIsZUFBT0YsZ0JBQWdCLENBQUNDLE1BQUQsRUFBU0MsR0FBVCxZQUFrQkcsR0FBbEIsU0FBMEJHLEdBQTFCLEVBQXZCO0FBQ0Q7O0FBQ0QsdUJBQVdILEdBQVgsU0FBbUJHLEdBQW5CLFNBQTJCTixHQUEzQixjQUFvQ08sa0JBQWtCLENBQUNSLE1BQU0sQ0FBQ0MsR0FBRCxDQUFQLENBQXREO0FBQ0Q7O0FBQ0QsV0FBT0csR0FBUDtBQUNELEdBWHNELEVBV3BERixJQVhvRCxDQUF2QjtBQUFBLENBQWhDO0FBYUE7Ozs7Ozs7O0FBTUFVLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlQyxLQUFmLEdBQXVCLFVBQVNDLEdBQVQsRUFBMkI7QUFBQSxNQUFiZixNQUFhLHVFQUFKLEVBQUk7QUFDaEQsTUFBTWdCLFdBQVcsR0FBR1AsdUJBQXVCLENBQUNULE1BQUQsQ0FBM0M7QUFDQSxTQUFPSixLQUFLLFdBQUttQixHQUFMLFNBQWFDLFdBQVcsY0FBUUEsV0FBUixJQUF5QixFQUFqRCxFQUFaO0FBQ0QsQ0FIRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9wZWRyby9oYWNrL1JhdGVjaGFuZ2UvZ3FsL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZldGNoID0gcmVxdWlyZSgnbm9kZS1mZXRjaCcpO1xuY29uc3QgeyBpc0FycmF5IH0gPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxuLyoqXG4gKiBUcmFuc2Zvcm1zIGFuIGFycmF5IGludG8gYW4gZW5jb2RlZCBVUkkgc3RyaW5nIFxuICogXG4gKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zIFxuICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICogQHBhcmFtIHtzdHJpbmd9IHNsdWdcbiAqL1xuY29uc3QgYXJyYXlUb1VybFN0cmluZyA9IChwYXJhbXMsIGtleSwgc2x1ZykgPT4gcGFyYW1zW2tleV0ucmVkdWNlKCAoYWNjLCBpdGVtLCBpbmRleCkgPT4ge1xuICBjb25zdCBhbXAgPSBpbmRleCA9PT0gMCA/ICcnIDogJyYnO1xuICByZXR1cm4gYCR7IGFjYyB9JHsgYW1wIH0keyBrZXkgfVtdPSR7IGVuY29kZVVSSUNvbXBvbmVudChpdGVtKSB9YDtcbn0sIHNsdWcpO1xuXG4vKipcbiAqIFRyYW5zZm9ybXMgYW4gb2JqZWN0IG9mIHBhcmFtZXRlcnMgaW50byBhIFVSTCBlbmNvZGVkIHF1ZXJ5IHN0cmluZ1xuICogXG4gKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zICAgQW4gb2JqZWN0IG9mIFVSTCBwYXJhbWV0ZXJzIHRvIGJlIGVuY29kZVxuICogQHBhcmFtIHtzdHJpbmd9IHNsdWcgICAgIFRoZSBpbml0YWwgc2x1ZyBmb3IgdGhlIFVSTFxuICovXG5jb25zdCBwYXJhbXNPYmplY3RUb1VybFN0cmluZyA9IChwYXJhbXMsIHNsdWcgPSAnJykgPT4gT2JqZWN0LmtleXMocGFyYW1zKS5yZWR1Y2UoIChhY2MsIGtleSwgaW5kZXgpID0+IHtcbiAgLy8gRW5zdXJlcyB0aGUgcGFyYW1ldGVyIFxuICBpZiAocGFyYW1zW2tleV0gIT09IG51bGwpIHtcbiAgICBjb25zdCBhbXAgPSBpbmRleCA9PT0gMCA/ICcnIDogJyYnO1xuXG4gICAgaWYgKGlzQXJyYXkocGFyYW1zW2tleV0pKSB7XG4gICAgICByZXR1cm4gYXJyYXlUb1VybFN0cmluZyhwYXJhbXMsIGtleSwgYCR7IGFjYyB9JHsgYW1wIH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGAkeyBhY2MgfSR7IGFtcCB9JHsga2V5IH09JHsgZW5jb2RlVVJJQ29tcG9uZW50KHBhcmFtc1trZXldKSB9YDtcbiAgfVxuICByZXR1cm4gYWNjO1xufSwgc2x1Zyk7XG5cbi8qKlxuICogQSB3cmFwcGVyIGFyb3VuZCBmZXRjaCB0byBoYW5kbGUgcXVlcnkgcGFyYW1ldGVyIHRyYW5zZm9ybWF0aW9uXG4gKiBcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgICAgICBUaGUgYmFzZSB1cmxcbiAqIEBwYXJhbSB7b2JqZWN0fSBwYXJhbXMgICBBbiBvYmplY3Qgd2l0aCB0aGUgcGFyYW1ldGVyc1xuICovXG5tb2R1bGUuZXhwb3J0cy5idWlsZCA9IGZ1bmN0aW9uKHVybCwgcGFyYW1zID0ge30pIHtcbiAgY29uc3QgcXVlcnlTdHJpbmcgPSBwYXJhbXNPYmplY3RUb1VybFN0cmluZyhwYXJhbXMpO1xuICByZXR1cm4gZmV0Y2goYCR7IHVybCB9JHsgcXVlcnlTdHJpbmcgPyBgPyR7IHF1ZXJ5U3RyaW5nIH1gIDogJycgfWApXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "fetch.js"
      ],
      "names": [
        "fetch",
        "require",
        "isArray",
        "arrayToUrlString",
        "params",
        "key",
        "slug",
        "reduce",
        "acc",
        "item",
        "index",
        "amp",
        "encodeURIComponent",
        "paramsObjectToUrlString",
        "Object",
        "keys",
        "module",
        "exports",
        "build",
        "url",
        "queryString"
      ],
      "mappings": ";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;eACoBA,OAAO,CAAC,QAAD,C;IAAnBC,O,YAAAA,O;AAER;;;;;;;;;AAOA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd;AAAA,SAAuBF,MAAM,CAACC,GAAD,CAAN,CAAYE,MAAZ,CAAoB,UAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAsB;AACxF,QAAMC,GAAG,GAAGD,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,GAA/B;AACA,qBAAWF,GAAX,SAAmBG,GAAnB,SAA2BN,GAA3B,gBAAsCO,kBAAkB,CAACH,IAAD,CAAxD;AACD,GAH+C,EAG7CH,IAH6C,CAAvB;AAAA,CAAzB;AAKA;;;;;;;;AAMA,IAAMO,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACT,MAAD;AAAA,MAASE,IAAT,uEAAgB,EAAhB;AAAA,SAAuBQ,MAAM,CAACC,IAAP,CAAYX,MAAZ,EAAoBG,MAApB,CAA4B,UAACC,GAAD,EAAMH,GAAN,EAAWK,KAAX,EAAqB;AACtG;AACA,QAAIN,MAAM,CAACC,GAAD,CAAN,KAAgB,IAApB,EAA0B;AACxB,UAAMM,GAAG,GAAGD,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,GAA/B;;AAEA,UAAIR,OAAO,CAACE,MAAM,CAACC,GAAD,CAAP,CAAX,EAA0B;AACxB,eAAOF,gBAAgB,CAACC,MAAD,EAASC,GAAT,YAAkBG,GAAlB,SAA0BG,GAA1B,EAAvB;AACD;;AACD,uBAAWH,GAAX,SAAmBG,GAAnB,SAA2BN,GAA3B,cAAoCO,kBAAkB,CAACR,MAAM,CAACC,GAAD,CAAP,CAAtD;AACD;;AACD,WAAOG,GAAP;AACD,GAXsD,EAWpDF,IAXoD,CAAvB;AAAA,CAAhC;AAaA;;;;;;;;AAMAU,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,UAASC,GAAT,EAA2B;AAAA,MAAbf,MAAa,uEAAJ,EAAI;AAChD,MAAMgB,WAAW,GAAGP,uBAAuB,CAACT,MAAD,CAA3C;AACA,SAAOJ,KAAK,WAAKmB,GAAL,SAAaC,WAAW,cAAQA,WAAR,IAAyB,EAAjD,EAAZ;AACD,CAHD",
      "sourceRoot": "/home/pedro/hack/Ratechange/gql/src",
      "sourcesContent": [
        "const fetch = require('node-fetch');\nconst { isArray } = require('lodash');\n\n/**\n * Transforms an array into an encoded URI string \n * \n * @param {object} params \n * @param {string} key\n * @param {string} slug\n */\nconst arrayToUrlString = (params, key, slug) => params[key].reduce( (acc, item, index) => {\n  const amp = index === 0 ? '' : '&';\n  return `${ acc }${ amp }${ key }[]=${ encodeURIComponent(item) }`;\n}, slug);\n\n/**\n * Transforms an object of parameters into a URL encoded query string\n * \n * @param {object} params   An object of URL parameters to be encode\n * @param {string} slug     The inital slug for the URL\n */\nconst paramsObjectToUrlString = (params, slug = '') => Object.keys(params).reduce( (acc, key, index) => {\n  // Ensures the parameter \n  if (params[key] !== null) {\n    const amp = index === 0 ? '' : '&';\n\n    if (isArray(params[key])) {\n      return arrayToUrlString(params, key, `${ acc }${ amp }`);\n    }\n    return `${ acc }${ amp }${ key }=${ encodeURIComponent(params[key]) }`;\n  }\n  return acc;\n}, slug);\n\n/**\n * A wrapper around fetch to handle query parameter transformation\n * \n * @param {string} url      The base url\n * @param {object} params   An object with the parameters\n */\nmodule.exports.build = function(url, params = {}) {\n  const queryString = paramsObjectToUrlString(params);\n  return fetch(`${ url }${ queryString ? `?${ queryString }` : '' }`)\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1568459316497
  },
  "{\"sourceRoot\":\"/app/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"/app/node_modules/babel-plugin-lodash/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/app/node_modules/babel-plugin-lodash/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/server.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _fetch = _interopRequireDefault(require(\"./fetch.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// The schema for object type definitions \nvar typeDefs = \"\\n  type Currencies {\\n    currencies: [String]\\n  }\\n\\n  type HistoricalRate {\\n    rate: Float\\n    date: String\\n  }\\n\\n  type HistoricalRates {\\n    rates: [HistoricalRate]\\n    base: String\\n  }\\n\\n  type Rate {\\n    currency: String\\n    rate: Float\\n  }\\n\\n  type Rates {\\n    rates: [Rate]\\n    base: String\\n    date: String\\n  }\\n\\n  type Query {\\n    rates_historical(base: String, foreign: String, start_at: String, end_at: String) : HistoricalRates\\n    rates_latest(amount: Float, base: String, symbols: String): Rates\\n    list_currencies: Currencies\\n  }\\n\"; // Resolvers are only called when data is requested\n\nvar resolvers = {\n  Query: {\n    rates_historical: function () {\n      var _rates_historical = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_, params) {\n        var base, foreign, start_at, end_at, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                base = params.base, foreign = params.foreign, start_at = params.start_at, end_at = params.end_at;\n                _context.next = 3;\n                return _fetch[\"default\"].build(\"\".concat(process.env.EXCHANGE_RATE_API, \"/history\"), {\n                  base: base,\n                  start_at: start_at,\n                  end_at: end_at,\n                  symbols: foreign\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 3:\n                data = _context.sent;\n                return _context.abrupt(\"return\", {\n                  data: data,\n                  params: params\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function rates_historical(_x, _x2) {\n        return _rates_historical.apply(this, arguments);\n      }\n\n      return rates_historical;\n    }(),\n    rates_latest: function () {\n      var _rates_latest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_, params) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _fetch[\"default\"].build(\"\".concat(process.env.EXCHANGE_RATE_API, \"/latest\"), _objectSpread({}, params)).then(function (res) {\n                  return res.json();\n                });\n\n              case 2:\n                _context2.t0 = _context2.sent;\n                _context2.t1 = params;\n                return _context2.abrupt(\"return\", {\n                  data: _context2.t0,\n                  params: _context2.t1\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function rates_latest(_x3, _x4) {\n        return _rates_latest.apply(this, arguments);\n      }\n\n      return rates_latest;\n    }(),\n    list_currencies: function () {\n      var _list_currencies = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_, params) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", _fetch[\"default\"].build(\"\".concat(process.env.EXCHANGE_RATE_API, \"/latest\"), params).then(function (res) {\n                  return res.json();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function list_currencies(_x5, _x6) {\n        return _list_currencies.apply(this, arguments);\n      }\n\n      return list_currencies;\n    }()\n  },\n  Currencies: {\n    currencies: function currencies(data) {\n      return Object.keys((0, _get2[\"default\"])(data, 'rates', {}));\n    }\n  },\n  HistoricalRates: {\n    base: function base(_ref) {\n      var data = _ref.data;\n      return (0, _get2[\"default\"])(data, 'base', null);\n    },\n    rates: function rates(_ref2) {\n      var data = _ref2.data,\n          params = _ref2.params;\n      var rates = (0, _get2[\"default\"])(data, 'rates', {});\n      var foreign = (0, _get2[\"default\"])(params, 'foreign', null); // Tranforms the rates into the correct format\n\n      return Object.keys(rates).map(function (date) {\n        return {\n          date: date,\n          rate: (0, _get2[\"default\"])(rates, \"\".concat(date, \".\").concat(foreign), null)\n        };\n      }).sort(function (a, b) {\n        return new Date((0, _get2[\"default\"])(b, 'date')) - new Date((0, _get2[\"default\"])(a, 'date'));\n      });\n    }\n  },\n  Rates: {\n    base: function base(_ref3) {\n      var data = _ref3.data;\n      return (0, _get2[\"default\"])(data, 'base', null);\n    },\n    date: function date(_ref4) {\n      var data = _ref4.data;\n      return (0, _get2[\"default\"])(data, 'date', null);\n    },\n    rates: function rates(_ref5) {\n      var data = _ref5.data,\n          params = _ref5.params;\n      var rates = (0, _get2[\"default\"])(data, 'rates', {});\n      var amount = (0, _get2[\"default\"])(params, 'amount', false); // Tranforms the rates into the correct format\n\n      return Object.keys(rates).map(function (currency) {\n        return {\n          currency: currency,\n          rate: amount ? parseFloat(rates[currency]) * parseFloat(amount) : rates[currency]\n        };\n      });\n    }\n  }\n}; // Constructs the server\n\nvar server = new _apolloServer.ApolloServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n}); // Starts the basic apollo server\n\nserver.listen(3333).then(function (_ref6) {\n  var url = _ref6.url;\n  console.log(\"\\uD83D\\uDE80  Server ready at \".concat(url));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "typeDefs",
        "resolvers",
        "Query",
        "rates_historical",
        "_",
        "params",
        "base",
        "foreign",
        "start_at",
        "end_at",
        "fetch",
        "build",
        "process",
        "env",
        "EXCHANGE_RATE_API",
        "symbols",
        "then",
        "res",
        "json",
        "data",
        "rates_latest",
        "list_currencies",
        "Currencies",
        "currencies",
        "Object",
        "keys",
        "HistoricalRates",
        "rates",
        "map",
        "date",
        "rate",
        "sort",
        "a",
        "b",
        "Date",
        "Rates",
        "amount",
        "currency",
        "parseFloat",
        "server",
        "ApolloServer",
        "listen",
        "url",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/app/src",
      "sourcesContent": [
        "import { ApolloServer } from 'apollo-server';\nimport fetch from './fetch.js';\nimport { get } from 'lodash';\n\n// The schema for object type definitions \nconst typeDefs = `\n  type Currencies {\n    currencies: [String]\n  }\n\n  type HistoricalRate {\n    rate: Float\n    date: String\n  }\n\n  type HistoricalRates {\n    rates: [HistoricalRate]\n    base: String\n  }\n\n  type Rate {\n    currency: String\n    rate: Float\n  }\n\n  type Rates {\n    rates: [Rate]\n    base: String\n    date: String\n  }\n\n  type Query {\n    rates_historical(base: String, foreign: String, start_at: String, end_at: String) : HistoricalRates\n    rates_latest(amount: Float, base: String, symbols: String): Rates\n    list_currencies: Currencies\n  }\n`;\n\n// Resolvers are only called when data is requested\nconst resolvers = {\n  Query: {\n    rates_historical: async(_, params) => {\n      const {\n        base,\n        foreign,\n        start_at,\n        end_at\n      } = params;\n\n      const data = await fetch.build(`${ process.env.EXCHANGE_RATE_API }/history`, {\n        base, start_at, end_at, symbols: foreign\n      }).then(res => res.json());\n      return { data, params };\n    },\n    rates_latest: async(_, params) => {\n      return {\n        data: await fetch.build(`${ process.env.EXCHANGE_RATE_API }/latest`, { ...params }).then(res => res.json()),\n        params\n      };\n    },\n    list_currencies: async(_, params) => fetch.build(`${ process.env.EXCHANGE_RATE_API }/latest`, params).then(res => res.json())\n  },\n  Currencies: {\n    currencies: (data) => Object.keys(get(data, 'rates', {}))\n  },\n  HistoricalRates: {\n    base: ({ data }) => get(data, 'base', null),\n    rates: ({ data, params }) => {\n      const rates = get(data, 'rates', {});\n      const foreign = get(params, 'foreign', null);\n\n      // Tranforms the rates into the correct format\n      return Object.keys(rates).map(date => {\n        return {\n          date,\n          rate: get(rates, `${ date }.${ foreign }`, null)\n        }\n      }).sort( (a, b) => new Date(get(b, 'date')) - new Date(get(a, 'date')) );\n    }\n  },\n  Rates: {\n    base: ({ data }) => get(data, 'base', null),\n    date: ({ data }) => get(data, 'date', null),\n    rates: ({ data, params }) => {\n      const rates = get(data, 'rates', {});\n      const amount = get(params, 'amount', false);\n\n      // Tranforms the rates into the correct format\n      return Object.keys(rates).map(currency => {\n        return {\n          currency,\n          rate: amount ? parseFloat(rates[currency]) * parseFloat(amount) : rates[currency]\n        };\n      })\n    }\n  }\n};\n\n// Constructs the server\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers\n});\n\n// Starts the basic apollo server\nserver.listen(3333).then(({ url }) => {\n  console.log(`🚀  Server ready at ${url}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1568473451021
  },
  "{\"sourceRoot\":\"/app/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/app\",\"filename\":\"/app/src/fetch.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"/app/node_modules/babel-plugin-lodash/lib/index.js\",\"visitor\":{\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/app",
      "filename": "/app/src/fetch.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "/app/node_modules/babel-plugin-lodash/lib/index.js",
          "visitor": {
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/src/fetch.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/src/fetch.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/src",
        "sourceFileName": "fetch.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Transforms an array into an encoded URI string \n * \n * @param {object} params \n * @param {string} key\n * @param {string} slug\n */\nvar arrayToUrlString = function arrayToUrlString(params, key, slug) {\n  return params[key].reduce(function (acc, item, index) {\n    var amp = index === 0 ? '' : '&';\n    return \"\".concat(acc).concat(amp).concat(key, \"[]=\").concat(encodeURIComponent(item));\n  }, slug);\n};\n/**\n * Transforms an object of parameters into a URL encoded query string\n * \n * @param {object} params   An object of URL parameters to be encode\n * @param {string} slug     The inital slug for the URL\n */\n\n\nvar paramsObjectToUrlString = function paramsObjectToUrlString(params) {\n  var slug = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Object.keys(params).reduce(function (acc, key, index) {\n    // Ensures the parameter \n    if (params[key] !== null) {\n      var amp = index === 0 ? '' : '&';\n\n      if ((0, _isArray2[\"default\"])(params[key])) {\n        return arrayToUrlString(params, key, \"\".concat(acc).concat(amp));\n      }\n\n      return \"\".concat(acc).concat(amp).concat(key, \"=\").concat(encodeURIComponent(params[key]));\n    }\n\n    return acc;\n  }, slug);\n};\n/**\n * A wrapper around fetch to handle query parameter transformation\n * \n * @param {string} url      The base url\n * @param {object} params   An object with the parameters\n */\n\n\nmodule.exports.build = function (url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var queryString = paramsObjectToUrlString(params);\n  return (0, _nodeFetch[\"default\"])(\"\".concat(url).concat(queryString ? \"?\".concat(queryString) : ''));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZldGNoLmpzIl0sIm5hbWVzIjpbImFycmF5VG9VcmxTdHJpbmciLCJwYXJhbXMiLCJrZXkiLCJzbHVnIiwicmVkdWNlIiwiYWNjIiwiaXRlbSIsImluZGV4IiwiYW1wIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicGFyYW1zT2JqZWN0VG9VcmxTdHJpbmciLCJPYmplY3QiLCJrZXlzIiwibW9kdWxlIiwiZXhwb3J0cyIsImJ1aWxkIiwidXJsIiwicXVlcnlTdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztBQUdBOzs7Ozs7O0FBT0EsSUFBTUEsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQixDQUFDQyxNQUFELEVBQVNDLEdBQVQsRUFBY0MsSUFBZDtBQUFBLFNBQXVCRixNQUFNLENBQUNDLEdBQUQsQ0FBTixDQUFZRSxNQUFaLENBQW9CLFVBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxLQUFaLEVBQXNCO0FBQ3hGLFFBQU1DLEdBQUcsR0FBR0QsS0FBSyxLQUFLLENBQVYsR0FBYyxFQUFkLEdBQW1CLEdBQS9CO0FBQ0EscUJBQVdGLEdBQVgsU0FBbUJHLEdBQW5CLFNBQTJCTixHQUEzQixnQkFBc0NPLGtCQUFrQixDQUFDSCxJQUFELENBQXhEO0FBQ0QsR0FIK0MsRUFHN0NILElBSDZDLENBQXZCO0FBQUEsQ0FBekI7QUFLQTs7Ozs7Ozs7QUFNQSxJQUFNTyx1QkFBdUIsR0FBRyxTQUExQkEsdUJBQTBCLENBQUNULE1BQUQ7QUFBQSxNQUFTRSxJQUFULHVFQUFnQixFQUFoQjtBQUFBLFNBQXVCUSxNQUFNLENBQUNDLElBQVAsQ0FBWVgsTUFBWixFQUFvQkcsTUFBcEIsQ0FBNEIsVUFBQ0MsR0FBRCxFQUFNSCxHQUFOLEVBQVdLLEtBQVgsRUFBcUI7QUFDdEc7QUFDQSxRQUFJTixNQUFNLENBQUNDLEdBQUQsQ0FBTixLQUFnQixJQUFwQixFQUEwQjtBQUN4QixVQUFNTSxHQUFHLEdBQUdELEtBQUssS0FBSyxDQUFWLEdBQWMsRUFBZCxHQUFtQixHQUEvQjs7QUFFQSxVQUFJLDBCQUFRTixNQUFNLENBQUNDLEdBQUQsQ0FBZCxDQUFKLEVBQTBCO0FBQ3hCLGVBQU9GLGdCQUFnQixDQUFDQyxNQUFELEVBQVNDLEdBQVQsWUFBa0JHLEdBQWxCLFNBQTBCRyxHQUExQixFQUF2QjtBQUNEOztBQUNELHVCQUFXSCxHQUFYLFNBQW1CRyxHQUFuQixTQUEyQk4sR0FBM0IsY0FBb0NPLGtCQUFrQixDQUFDUixNQUFNLENBQUNDLEdBQUQsQ0FBUCxDQUF0RDtBQUNEOztBQUNELFdBQU9HLEdBQVA7QUFDRCxHQVhzRCxFQVdwREYsSUFYb0QsQ0FBdkI7QUFBQSxDQUFoQztBQWFBOzs7Ozs7OztBQU1BVSxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsS0FBZixHQUF1QixVQUFTQyxHQUFULEVBQTJCO0FBQUEsTUFBYmYsTUFBYSx1RUFBSixFQUFJO0FBQ2hELE1BQU1nQixXQUFXLEdBQUdQLHVCQUF1QixDQUFDVCxNQUFELENBQTNDO0FBQ0EsU0FBTyxxQ0FBVWUsR0FBVixTQUFrQkMsV0FBVyxjQUFRQSxXQUFSLElBQXlCLEVBQXRELEVBQVA7QUFDRCxDQUhEIiwic291cmNlUm9vdCI6Ii9hcHAvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZldGNoIGZyb20gJ25vZGUtZmV0Y2gnO1xuaW1wb3J0IHsgaXNBcnJheSB9IGZyb20gJ2xvZGFzaCc7XG5cbi8qKlxuICogVHJhbnNmb3JtcyBhbiBhcnJheSBpbnRvIGFuIGVuY29kZWQgVVJJIHN0cmluZyBcbiAqIFxuICogQHBhcmFtIHtvYmplY3R9IHBhcmFtcyBcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAqIEBwYXJhbSB7c3RyaW5nfSBzbHVnXG4gKi9cbmNvbnN0IGFycmF5VG9VcmxTdHJpbmcgPSAocGFyYW1zLCBrZXksIHNsdWcpID0+IHBhcmFtc1trZXldLnJlZHVjZSggKGFjYywgaXRlbSwgaW5kZXgpID0+IHtcbiAgY29uc3QgYW1wID0gaW5kZXggPT09IDAgPyAnJyA6ICcmJztcbiAgcmV0dXJuIGAkeyBhY2MgfSR7IGFtcCB9JHsga2V5IH1bXT0keyBlbmNvZGVVUklDb21wb25lbnQoaXRlbSkgfWA7XG59LCBzbHVnKTtcblxuLyoqXG4gKiBUcmFuc2Zvcm1zIGFuIG9iamVjdCBvZiBwYXJhbWV0ZXJzIGludG8gYSBVUkwgZW5jb2RlZCBxdWVyeSBzdHJpbmdcbiAqIFxuICogQHBhcmFtIHtvYmplY3R9IHBhcmFtcyAgIEFuIG9iamVjdCBvZiBVUkwgcGFyYW1ldGVycyB0byBiZSBlbmNvZGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzbHVnICAgICBUaGUgaW5pdGFsIHNsdWcgZm9yIHRoZSBVUkxcbiAqL1xuY29uc3QgcGFyYW1zT2JqZWN0VG9VcmxTdHJpbmcgPSAocGFyYW1zLCBzbHVnID0gJycpID0+IE9iamVjdC5rZXlzKHBhcmFtcykucmVkdWNlKCAoYWNjLCBrZXksIGluZGV4KSA9PiB7XG4gIC8vIEVuc3VyZXMgdGhlIHBhcmFtZXRlciBcbiAgaWYgKHBhcmFtc1trZXldICE9PSBudWxsKSB7XG4gICAgY29uc3QgYW1wID0gaW5kZXggPT09IDAgPyAnJyA6ICcmJztcblxuICAgIGlmIChpc0FycmF5KHBhcmFtc1trZXldKSkge1xuICAgICAgcmV0dXJuIGFycmF5VG9VcmxTdHJpbmcocGFyYW1zLCBrZXksIGAkeyBhY2MgfSR7IGFtcCB9YCk7XG4gICAgfVxuICAgIHJldHVybiBgJHsgYWNjIH0keyBhbXAgfSR7IGtleSB9PSR7IGVuY29kZVVSSUNvbXBvbmVudChwYXJhbXNba2V5XSkgfWA7XG4gIH1cbiAgcmV0dXJuIGFjYztcbn0sIHNsdWcpO1xuXG4vKipcbiAqIEEgd3JhcHBlciBhcm91bmQgZmV0Y2ggdG8gaGFuZGxlIHF1ZXJ5IHBhcmFtZXRlciB0cmFuc2Zvcm1hdGlvblxuICogXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsICAgICAgVGhlIGJhc2UgdXJsXG4gKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zICAgQW4gb2JqZWN0IHdpdGggdGhlIHBhcmFtZXRlcnNcbiAqL1xubW9kdWxlLmV4cG9ydHMuYnVpbGQgPSBmdW5jdGlvbih1cmwsIHBhcmFtcyA9IHt9KSB7XG4gIGNvbnN0IHF1ZXJ5U3RyaW5nID0gcGFyYW1zT2JqZWN0VG9VcmxTdHJpbmcocGFyYW1zKTtcbiAgcmV0dXJuIGZldGNoKGAkeyB1cmwgfSR7IHF1ZXJ5U3RyaW5nID8gYD8keyBxdWVyeVN0cmluZyB9YCA6ICcnIH1gKVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "fetch.js"
      ],
      "names": [
        "arrayToUrlString",
        "params",
        "key",
        "slug",
        "reduce",
        "acc",
        "item",
        "index",
        "amp",
        "encodeURIComponent",
        "paramsObjectToUrlString",
        "Object",
        "keys",
        "module",
        "exports",
        "build",
        "url",
        "queryString"
      ],
      "mappings": ";;;;AAAA;;;;AAGA;;;;;;;AAOA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd;AAAA,SAAuBF,MAAM,CAACC,GAAD,CAAN,CAAYE,MAAZ,CAAoB,UAACC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAsB;AACxF,QAAMC,GAAG,GAAGD,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,GAA/B;AACA,qBAAWF,GAAX,SAAmBG,GAAnB,SAA2BN,GAA3B,gBAAsCO,kBAAkB,CAACH,IAAD,CAAxD;AACD,GAH+C,EAG7CH,IAH6C,CAAvB;AAAA,CAAzB;AAKA;;;;;;;;AAMA,IAAMO,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACT,MAAD;AAAA,MAASE,IAAT,uEAAgB,EAAhB;AAAA,SAAuBQ,MAAM,CAACC,IAAP,CAAYX,MAAZ,EAAoBG,MAApB,CAA4B,UAACC,GAAD,EAAMH,GAAN,EAAWK,KAAX,EAAqB;AACtG;AACA,QAAIN,MAAM,CAACC,GAAD,CAAN,KAAgB,IAApB,EAA0B;AACxB,UAAMM,GAAG,GAAGD,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,GAA/B;;AAEA,UAAI,0BAAQN,MAAM,CAACC,GAAD,CAAd,CAAJ,EAA0B;AACxB,eAAOF,gBAAgB,CAACC,MAAD,EAASC,GAAT,YAAkBG,GAAlB,SAA0BG,GAA1B,EAAvB;AACD;;AACD,uBAAWH,GAAX,SAAmBG,GAAnB,SAA2BN,GAA3B,cAAoCO,kBAAkB,CAACR,MAAM,CAACC,GAAD,CAAP,CAAtD;AACD;;AACD,WAAOG,GAAP;AACD,GAXsD,EAWpDF,IAXoD,CAAvB;AAAA,CAAhC;AAaA;;;;;;;;AAMAU,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,UAASC,GAAT,EAA2B;AAAA,MAAbf,MAAa,uEAAJ,EAAI;AAChD,MAAMgB,WAAW,GAAGP,uBAAuB,CAACT,MAAD,CAA3C;AACA,SAAO,qCAAUe,GAAV,SAAkBC,WAAW,cAAQA,WAAR,IAAyB,EAAtD,EAAP;AACD,CAHD",
      "sourceRoot": "/app/src",
      "sourcesContent": [
        "import fetch from 'node-fetch';\nimport { isArray } from 'lodash';\n\n/**\n * Transforms an array into an encoded URI string \n * \n * @param {object} params \n * @param {string} key\n * @param {string} slug\n */\nconst arrayToUrlString = (params, key, slug) => params[key].reduce( (acc, item, index) => {\n  const amp = index === 0 ? '' : '&';\n  return `${ acc }${ amp }${ key }[]=${ encodeURIComponent(item) }`;\n}, slug);\n\n/**\n * Transforms an object of parameters into a URL encoded query string\n * \n * @param {object} params   An object of URL parameters to be encode\n * @param {string} slug     The inital slug for the URL\n */\nconst paramsObjectToUrlString = (params, slug = '') => Object.keys(params).reduce( (acc, key, index) => {\n  // Ensures the parameter \n  if (params[key] !== null) {\n    const amp = index === 0 ? '' : '&';\n\n    if (isArray(params[key])) {\n      return arrayToUrlString(params, key, `${ acc }${ amp }`);\n    }\n    return `${ acc }${ amp }${ key }=${ encodeURIComponent(params[key]) }`;\n  }\n  return acc;\n}, slug);\n\n/**\n * A wrapper around fetch to handle query parameter transformation\n * \n * @param {string} url      The base url\n * @param {object} params   An object with the parameters\n */\nmodule.exports.build = function(url, params = {}) {\n  const queryString = paramsObjectToUrlString(params);\n  return fetch(`${ url }${ queryString ? `?${ queryString }` : '' }`)\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1568472197787
  }
}